//
// RpcAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

extension OpenAPIClientAPI {


open class RpcAPI {

    /**
     List Bookings in time frame cars
     
     - parameter startTime: (query) Start time for filtering (optional)
     - parameter endTime: (query) End time for filtering (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listBookingsInRange(startTime: Date? = nil, endTime: Date? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [Booking]?, _ error: Error?) -> Void)) -> RequestTask {
        return listBookingsInRangeWithRequestBuilder(startTime: startTime, endTime: endTime).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     List Bookings in time frame cars
     - GET /bookings/rpc/in_range
     - parameter startTime: (query) Start time for filtering (optional)
     - parameter endTime: (query) End time for filtering (optional)
     - returns: RequestBuilder<[Booking]> 
     */
    open class func listBookingsInRangeWithRequestBuilder(startTime: Date? = nil, endTime: Date? = nil) -> RequestBuilder<[Booking]> {
        let localVariablePath = "/bookings/rpc/in_range"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "startTime": (wrappedValue: startTime?.encodeToJSON(), isExplode: true),
            "endTime": (wrappedValue: endTime?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Booking]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
}
